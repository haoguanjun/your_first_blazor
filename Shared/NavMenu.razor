<div>
    <Switch Checked="theme == MenuTheme.Dark" OnChange=changeTheme CheckedChildren=@("Dark") UnCheckedChildren=@("Light") />
    <br />
    <br />
    <Menu Theme=theme
          OnMenuItemClicked=handleClick
          Style=" width: 200px "
          DefaultOpenKeys=@(new []{"sub1"})
          SelectedKeys=@(new []{current})
          Mode="MenuMode.Inline">
        <SubMenu Key="sub1" TitleTemplate=@sub1Title>
            <MenuItem>
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
            </MenuItem>
            <MenuItem>
             <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
            </MenuItem>
            <MenuItem Key="3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
            </MenuItem>
            
        </SubMenu>
        
    </Menu>
</div>


@code {

    RenderFragment sub1Title =
        @<span>
            <Icon Type="mail" Theme="outline"></Icon>
            <span>Navigation One</span>
        </span>;

    MenuTheme theme = MenuTheme.Dark;
    string current = "1";

    void changeTheme(bool value)
    {
        this.theme = value ? MenuTheme.Dark : MenuTheme.Light;
    }

    void handleClick(MenuItem e)
    {
        current = e.Key;
    }

}
